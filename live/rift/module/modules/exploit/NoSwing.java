package live.rift.module.modules.exploit;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.function.Predicate;
import live.rift.event.events.PacketEvent;
import live.rift.module.Category;
import live.rift.module.Module;
import live.rift.setting.Setting;
import me.zero.alpine.listener.EventHandler;
import me.zero.alpine.listener.EventHook;
import me.zero.alpine.listener.Listener;
import net.minecraft.network.Packet;
import net.minecraft.network.play.client.CPacketAnimation;
import net.minecraft.util.EnumHand;

public class NoSwing extends Module {

    public Setting mode;
    public ArrayList modes = new ArrayList();
    int waitTicks = 40;
    Queue packets = new LinkedList();
    @EventHandler
    public Listener packetSendListener = new Listener((e) -> {
        if (!this.mode.getValString().equalsIgnoreCase("Spoof") && e.getPacket() instanceof CPacketAnimation) {
            e.cancel();
            if (this.mode.getValString().equalsIgnoreCase("Delay")) {
                this.packets.add(e.getPacket());
            }
        }

    }, new Predicate[0]);

    public NoSwing() {
        super("NoSwing", 0, Category.EXPLOITS);
        this.mode = new Setting("Mode", this, "Cancel", this.modes);
        this.modes.add("Cancel");
        this.modes.add("Overload");
        this.modes.add("Delay");
    }

    public void onUpdate() {
        --this.waitTicks;
        if (this.mode.getValString().equalsIgnoreCase("OverLoad") && NoSwing.mc.player != null) {
            NoSwing.mc.player.swingArm(EnumHand.MAIN_HAND);
            NoSwing.mc.player.swingArm(EnumHand.OFF_HAND);
        }

        if (this.waitTicks <= 0) {
            while (!this.packets.isEmpty()) {
                NoSwing.mc.player.connection.sendPacket((Packet) this.packets.poll());
            }
        }

    }
}
